@model simhukdis.Models.clsHukdis
@{
    ViewBag.Title = "Create Hukuman Disiplin Master";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
            @Html.LabelFor(model => model.HukdisID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HukdisID, new { htmlAttributes = new { @class = "form-control", @id = "HukdisID", required = "required" } })
                @Html.ValidationMessageFor(model => model.HukdisID, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.HukdisDesc, htmlAttributes: new { @class = "control-label col" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HukdisDesc, new { htmlAttributes = new { @class = "form-control", @id = "HukdisDesc", required = "required" } })
                @Html.ValidationMessageFor(model => model.HukdisDesc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tingkat, htmlAttributes: new { @class = "control-label col" })
            <div class="col-md-10">
                @Html.DropDownList("Tingkat", new List<SelectListItem>
                                                                {
                                                                    new SelectListItem{ Text = "Ringan", Value = "Ringan" },
                                                                    new SelectListItem{ Text = "Sedang", Value = "Sedang" },
                                                                    new SelectListItem{ Text = "Berat", Value = "Berat" }
                                                                }, htmlAttributes: new { @class = "form-control", @id = "Tingkat" }
                                                            )
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Create" class="btn btn-primary" onclick="Insert()" /> | @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </div>
}
<script type="text/javascript">
    function Insert() {
        var dpObj = {
            HukdisID: $('#HukdisID').val(),
            HukdisDesc: $('#HukdisDesc').val(),
            Tingkat: $('#Tingkat').val()
        };
        $.ajax({
            url: "/Hukdis/Create",
            data: JSON.stringify(dpObj),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result.toString() == "Success") {
                    Swal.fire({
                        icon: 'success',
                        title: 'Tambah Data berhasil !',
                        showConfirmButton: false,
                        timer: 3000
                    })
                    window.location.href = '@Url.Action("Index", "Hukdis")'
                }
                else {
                    if (result.toString() == "Hukdis sudah ada !") {
                        $("#HukdisID").val("");
                        $("#HukdisID").focus();
                        Swal.fire({
                            icon: 'warning',
                            title: result.toString(),
                            showConfirmButton: false,
                            timer: 3000
                        })
                    }
                    else {
                        Swal.fire({
                            icon: 'warning',
                            title: result.toString(),
                            showConfirmButton: false,
                            timer: 3000
                        })
                    }
                }
            },
            error: function (errormessage) {
                Swal.fire({
                    icon: 'warning',
                    title: errormessage.responseText,
                    showConfirmButton: false,
                    timer: 3000
                })
            }
        });
    }
</script>
